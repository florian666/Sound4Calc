SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\mosnier\Desktop\Sound4Calc\Sources\Sound4Calc.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Sound4Calc     1    /*****************************************************************/
      Sound4Calc     2    /*                                                               */
      Sound4Calc     3    /*   CASIO fx-9860G SDK Library                                  */
      Sound4Calc     4    /*                                                               */
      Sound4Calc     5    /*   File name : [ProjectName].c                                 */
      Sound4Calc     6    /*                                                               */
      Sound4Calc     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
      Sound4Calc     8    /*                                                               */
      Sound4Calc     9    /*****************************************************************/
      Sound4Calc    10    #include "fxlib.h"
      Sound4Calc    11    #include "stdio.h"
      Sound4Calc    12    #include "stdlib.h"
      Sound4Calc    13    
      Sound4Calc    14    #include "SH4comp.c"
P   00000000              _OSVersionAsInt:                 ; function: OSVersionAsInt
                                                           ; frame size=20
    00000000 4F22                   STS.L       PR,@-R15
    00000002 7FF0                   ADD         #-16,R15
    00000004 D346                   MOV.L       L473+6,R3  ; _sc0015
    00000006 67F3                   MOV         R15,R7
    00000008 770C                   ADD         #12,R7
    0000000A 66F3                   MOV         R15,R6
    0000000C 7608                   ADD         #8,R6
    0000000E 65F3                   MOV         R15,R5
    00000010 7504                   ADD         #4,R5
    00000012 430B                   JSR         @R3
    00000014 64F3                   MOV         R15,R4
    00000016 60F0                   MOV.B       @R15,R0
    00000018 D342                   MOV.L       L473+10,R3 ; H'FF000000
    0000001A 600C                   EXTU.B      R0,R0
    0000001C D242                   MOV.L       L473+14,R2 ; H'00FF0000
    0000001E 4028                   SHLL16      R0
    00000020 4018                   SHLL8       R0
    00000022 2039                   AND         R3,R0
    00000024 6103                   MOV         R0,R1
    00000026 84F4                   MOV.B       @(4,R15),R0
    00000028 600C                   EXTU.B      R0,R0
    0000002A 4028                   SHLL16      R0
    0000002C 2029                   AND         R2,R0
    0000002E 201B                   OR          R1,R0
    00000030 6103                   MOV         R0,R1
    00000032 85F4                   MOV.W       @(8,R15),R0
    00000034 600D                   EXTU.W      R0,R0
    00000036 7F10                   ADD         #16,R15
    00000038 4F26                   LDS.L       @R15+,PR
    0000003A 000B                   RTS
    0000003C 201B                   OR          R1,R0
    0000003E              _delay:                          ; function: delay
                                                           ; frame size=0
    0000003E E505                   MOV         #5,R5
    00000040 E400                   MOV         #0,R4
    00000042              L439:                             
    00000042 7401                   ADD         #1,R4
    00000044 634E                   EXTS.B      R4,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000046 3353                   CMP/GE      R5,R3
    00000048 8BFB                   BF          L439
    0000004A 000B                   RTS
    0000004C 0009                   NOP
    0000004E              _CheckKeyRow:                    ; function: CheckKeyRow
                                                           ; frame size=32
    0000004E 634C                   EXTU.B      R4,R3
    00000050 2FE6                   MOV.L       R14,@-R15
    00000052 E50F                   MOV         #15,R5
    00000054 2FD6                   MOV.L       R13,@-R15
    00000056 4309                   SHLR2       R3
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 2549                   AND         R4,R5
    0000005C 2FB6                   MOV.L       R11,@-R15
    0000005E 4309                   SHLR2       R3
    00000060 2FA6                   MOV.L       R10,@-R15
    00000062 665C                   EXTU.B      R5,R6
    00000064 2F96                   MOV.L       R9,@-R15
    00000066 6063                   MOV         R6,R0
    00000068 4F22                   STS.L       PR,@-R15
    0000006A 4011                   CMP/PZ      R0
    0000006C 7FFC                   ADD         #-4,R15
    0000006E 2F30                   MOV.B       R3,@R15
    00000070 8B01                   BF          L440
    00000072 A005                   BRA         L441
    00000074 C907                   AND         #7,R0
    00000076              L440:                             
    00000076 6007                   NOT         R0,R0
    00000078 7001                   ADD         #1,R0
    0000007A C907                   AND         #7,R0
    0000007C 6007                   NOT         R0,R0
    0000007E 7001                   ADD         #1,R0
    00000080              L441:                             
    00000080 994B                   MOV.W       L473,R9    ; H'AAAA
    00000082 E208                   MOV         #8,R2
    00000084 DB29                   MOV.L       L473+18,R11; H'A4000102
    00000086 6403                   MOV         R0,R4
    00000088 9D48                   MOV.W       L473+2,R13 ; H'FF00
    0000008A E503                   MOV         #3,R5
    0000008C DE28                   MOV.L       L473+22,R14; H'A4000118
    0000008E EA01                   MOV         #1,R10
    00000090 4000                   SHLL        R0
    00000092 450C                   SHAD        R0,R5
    00000094 4A4C                   SHAD        R4,R10
    00000096 6AA7                   NOT         R10,R10
    00000098 6CB3                   MOV         R11,R12
    0000009A 3623                   CMP/GE      R2,R6
    0000009C 8D0D                   BT/S        L442
    0000009E 7C36                   ADD         #54,R12
    000000A0 259A                   XOR         R9,R5
    000000A2 2B51                   MOV.W       R5,@R11
    000000A4 60E1                   MOV.W       @R14,R0
    000000A6 20D9                   AND         R13,R0
    000000A8 CBAA                   OR          #170,R0
    000000AA BFC8                   BSR         _delay
    000000AC 2E01                   MOV.W       R0,@R14
    000000AE D221                   MOV.L       L473+26,R2 ; H'A4000122




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000B0 22A0                   MOV.B       R10,@R2
    000000B2 60C0                   MOV.B       @R12,R0
    000000B4 C9F0                   AND         #240,R0
    000000B6 A00D                   BRA         L470
    000000B8 CB0F                   OR          #15,R0
    000000BA              L442:                             
    000000BA 2B91                   MOV.W       R9,@R11
    000000BC 60E1                   MOV.W       @R14,R0
    000000BE 20D9                   AND         R13,R0
    000000C0 CBAA                   OR          #170,R0
    000000C2 205A                   XOR         R5,R0
    000000C4 BFBB                   BSR         _delay
    000000C6 2E01                   MOV.W       R0,@R14
    000000C8 D31A                   MOV.L       L473+26,R3 ; H'A4000122
    000000CA E2FF                   MOV         #-1,R2
    000000CC 2320                   MOV.B       R2,@R3
    000000CE 60C0                   MOV.B       @R12,R0
    000000D0 C9F0                   AND         #240,R0
    000000D2 20AB                   OR          R10,R0
    000000D4              L470:                             
    000000D4 BFB3                   BSR         _delay
    000000D6 2C00                   MOV.B       R0,@R12
    000000D8 D317                   MOV.L       L473+30,R3 ; H'A4000120
    000000DA 6030                   MOV.B       @R3,R0
    000000DC 62F0                   MOV.B       @R15,R2
    000000DE 6007                   NOT         R0,R0
    000000E0 622C                   EXTU.B      R2,R2
    000000E2 622B                   NEG         R2,R2
    000000E4 402C                   SHAD        R2,R0
    000000E6 C901                   AND         #1,R0
    000000E8 BFA9                   BSR         _delay
    000000EA 2F00                   MOV.B       R0,@R15
    000000EC 2B91                   MOV.W       R9,@R11
    000000EE 60E1                   MOV.W       @R14,R0
    000000F0 20D9                   AND         R13,R0
    000000F2 CBAA                   OR          #170,R0
    000000F4 BFA3                   BSR         _delay
    000000F6 2E01                   MOV.W       R0,@R14
    000000F8 9211                   MOV.W       L473+4,R2  ; H'5555
    000000FA 2B21                   MOV.W       R2,@R11
    000000FC 60E1                   MOV.W       @R14,R0
    000000FE 20D9                   AND         R13,R0
    00000100 CB55                   OR          #85,R0
    00000102 BF9C                   BSR         _delay
    00000104 2E01                   MOV.W       R0,@R14
    00000106 60F0                   MOV.B       @R15,R0
    00000108 7F04                   ADD         #4,R15
    0000010A 4F26                   LDS.L       @R15+,PR
    0000010C 69F6                   MOV.L       @R15+,R9
    0000010E 6AF6                   MOV.L       @R15+,R10
    00000110 6BF6                   MOV.L       @R15+,R11
    00000112 6CF6                   MOV.L       @R15+,R12
    00000114 6DF6                   MOV.L       @R15+,R13
    00000116 000B                   RTS
    00000118 6EF6                   MOV.L       @R15+,R14
    0000011A              L473:                             
    0000011A AAAA                   .DATA.W     H'AAAA




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000011C FF00                   .DATA.W     H'FF00
    0000011E 5555                   .DATA.W     H'5555
    00000120 <00000000>             .DATA.L     _sc0015
    00000124 FF000000               .DATA.L     H'FF000000
    00000128 00FF0000               .DATA.L     H'00FF0000
    0000012C A4000102               .DATA.L     H'A4000102
    00000130 A4000118               .DATA.L     H'A4000118
    00000134 A4000122               .DATA.L     H'A4000122
    00000138 A4000120               .DATA.L     H'A4000120
    0000013C              _KeyDown:                        ; function: KeyDown
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    0000013C 2FE6                   MOV.L       R14,@-R15
    0000013E EE0A                   MOV         #10,R14
    00000140 2FD6                   MOV.L       R13,@-R15
    00000142 4F22                   STS.L       PR,@-R15
    00000144 D330                   MOV.L       L474,R3    ; H'A44B0000
    00000146 7FE8                   ADD         #-24,R15
    00000148 2F40                   MOV.B       R4,@R15
    0000014A 1F31                   MOV.L       R3,@(4,R15)
    0000014C 6DF0                   MOV.B       @R15,R13
    0000014E BF57                   BSR         _OSVersionAsInt
    00000150 6DDC                   EXTU.B      R13,R13
    00000152 D22E                   MOV.L       L474+4,R2  ; H'02020000
    00000154 3023                   CMP/GE      R2,R0
    00000156 8B26                   BF          L445
    00000158 D32D                   MOV.L       L474+8,R3  ; __modls
    0000015A 61D3                   MOV         R13,R1
    0000015C 430B                   JSR         @R3
    0000015E 60E3                   MOV         R14,R0
    00000160 2F00                   MOV.B       R0,@R15
    00000162 E610                   MOV         #16,R6
    00000164 D32B                   MOV.L       L474+12,R3 ; _memcpy
    00000166 64F3                   MOV         R15,R4
    00000168 55F1                   MOV.L       @(4,R15),R5
    0000016A 430B                   JSR         @R3
    0000016C 7408                   ADD         #8,R4
    0000016E E501                   MOV         #1,R5
    00000170 64F0                   MOV.B       @R15,R4
    00000172 61D3                   MOV         R13,R1
    00000174 D228                   MOV.L       L474+16,R2 ; __divls
    00000176 644C                   EXTU.B      R4,R4
    00000178 6343                   MOV         R4,R3
    0000017A 2359                   AND         R5,R3
    0000017C 4308                   SHLL2       R3
    0000017E 4300                   SHLL        R3
    00000180 420B                   JSR         @R2
    00000182 60E3                   MOV         R14,R0
    00000184 330C                   ADD         R0,R3
    00000186 73FF                   ADD         #-1,R3
    00000188 6053                   MOV         R5,R0
    0000018A 403C                   SHAD        R3,R0
    0000018C 6343                   MOV         R4,R3
    0000018E 4321                   SHAR        R3
    00000190 4300                   SHLL        R3
    00000192 61F3                   MOV         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000194 7108                   ADD         #8,R1
    00000196 331C                   ADD         R1,R3
    00000198 6231                   MOV.W       @R3,R2
    0000019A 622D                   EXTU.W      R2,R2
    0000019C 2029                   AND         R2,R0
    0000019E 2008                   TST         R0,R0
    000001A0 0029                   MOVT        R0
    000001A2 A00E                   BRA         L447
    000001A4 CA01                   XOR         #1,R0
    000001A6              L445:                             
    000001A6 61D3                   MOV         R13,R1
    000001A8 D31B                   MOV.L       L474+16,R3 ; __divls
    000001AA 430B                   JSR         @R3
    000001AC 60E3                   MOV         R14,R0
    000001AE 6403                   MOV         R0,R4
    000001B0 D317                   MOV.L       L474+8,R3  ; __modls
    000001B2 61D3                   MOV         R13,R1
    000001B4 74FF                   ADD         #-1,R4
    000001B6 4408                   SHLL2       R4
    000001B8 4408                   SHLL2       R4
    000001BA 430B                   JSR         @R3
    000001BC 60E3                   MOV         R14,R0
    000001BE BF46                   BSR         _CheckKeyRow
    000001C0 340C                   ADD         R0,R4
    000001C2              L447:                             
    000001C2 7F18                   ADD         #24,R15
    000001C4 4F26                   LDS.L       @R15+,PR
    000001C6 6DF6                   MOV.L       @R15+,R13
    000001C8 000B                   RTS
    000001CA 6EF6                   MOV.L       @R15+,R14
    000001CC              _GetKeyMod:                      ; function: GetKeyMod
                                                           ; frame size=20
    000001CC 2FE6                   MOV.L       R14,@-R15
    000001CE 2FD6                   MOV.L       R13,@-R15
    000001D0 2FC6                   MOV.L       R12,@-R15
    000001D2 4F22                   STS.L       PR,@-R15
    000001D4 D311                   MOV.L       L474+20,R3 ; _GetKey
    000001D6 7FFC                   ADD         #-4,R15
    000001D8 430B                   JSR         @R3
    000001DA 6C43                   MOV         R4,R12
    000001DC 2F00                   MOV.B       R0,@R15
    000001DE EE00                   MOV         #0,R14
    000001E0 ED50                   MOV         #80,R13
    000001E2              L450:                             
    000001E2 BFAB                   BSR         _KeyDown
    000001E4 64E3                   MOV         R14,R4
    000001E6 600C                   EXTU.B      R0,R0
    000001E8 2008                   TST         R0,R0
    000001EA 8902                   BT          L451
    000001EC 6EEC                   EXTU.B      R14,R14
    000001EE A004                   BRA         L449
    000001F0 2CE2                   MOV.L       R14,@R12
    000001F2              L451:                             
    000001F2 7E01                   ADD         #1,R14
    000001F4 62EC                   EXTU.B      R14,R2
    000001F6 32D3                   CMP/GE      R13,R2
    000001F8 8BF3                   BF          L450




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001FA              L449:                             
    000001FA 60F0                   MOV.B       @R15,R0
    000001FC 7F04                   ADD         #4,R15
    000001FE 4F26                   LDS.L       @R15+,PR
    00000200 6CF6                   MOV.L       @R15+,R12
    00000202 6DF6                   MOV.L       @R15+,R13
    00000204 000B                   RTS
    00000206 6EF6                   MOV.L       @R15+,R14
    00000208              L474:                             
    00000208 A44B0000               .DATA.L     H'A44B0000
    0000020C 02020000               .DATA.L     H'02020000
    00000210 <00000000>             .DATA.L     __modls
    00000214 <00000000>             .DATA.L     _memcpy
    00000218 <00000000>             .DATA.L     __divls
    0000021C <00000000>             .DATA.L     _GetKey
      Sound4Calc    15    #include "addresses.h"
      Sound4Calc    16    #include "Sound4Calc.h"
      Sound4Calc    17    
      Sound4Calc    18    /*****************************************************************/
      Sound4Calc    19    /*                                                               */
      Sound4Calc    20    /*   CASIO fx-9860G SDK Library                                  */
      Sound4Calc    21    /*                                                               */
      Sound4Calc    22    /*   File name : [ProjectName].c                                 */
      Sound4Calc    23    /*                                                               */
      Sound4Calc    24    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
      Sound4Calc    25    /*                                                               */
      Sound4Calc    26    /*****************************************************************/
      Sound4Calc    27    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000220              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=104
    00000220 2FE6                   MOV.L       R14,@-R15
    00000222 2FD6                   MOV.L       R13,@-R15
    00000224 2FC6                   MOV.L       R12,@-R15
    00000226 2FB6                   MOV.L       R11,@-R15
    00000228 2FA6                   MOV.L       R10,@-R15
    0000022A 2F96                   MOV.L       R9,@-R15
    0000022C 2F86                   MOV.L       R8,@-R15
    0000022E 4F22                   STS.L       PR,@-R15
      Sound4Calc    28    {
      Sound4Calc    29        unsigned int key;
      Sound4Calc    30        char buffer[50];
      Sound4Calc    31    
      Sound4Calc    32        int sleep = 2000;
    00000230 9E4F                   MOV.W       L475,R14   ; H'07D0
    00000232 7FC8                   ADD         #-56,R15
      Sound4Calc    33        int i;
      Sound4Calc    34    
      Sound4Calc    35        setup();
    00000234 B05A                   BSR         _setup
    00000236 0009                   NOP
    00000238 D826                   MOV.L       L475+2,R8  ; L410
    0000023A E900                   MOV         #0,R9
    0000023C DB26                   MOV.L       L475+6,R11 ; _PrintMini
    0000023E 6DF3                   MOV         R15,R13
    00000240 DC26                   MOV.L       L475+10,R12; _sprintf
    00000242 7D04                   ADD         #4,R13
      Sound4Calc    36    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Sound4Calc    37        while(1)
    00000244              L455:                             
      Sound4Calc    38        {
      Sound4Calc    39            Bdisp_AllClr_VRAM();
    00000244 D326                   MOV.L       L475+14,R3 ; _Bdisp_AllClr_VRAM
    00000246 430B                   JSR         @R3
    00000248 0009                   NOP
      Sound4Calc    40            
      Sound4Calc    41            sprintf(buffer ,"- %d +",sleep);
    0000024A 2FE6                   MOV.L       R14,@-R15
    0000024C 2F86                   MOV.L       R8,@-R15
    0000024E 4C0B                   JSR         @R12
    00000250 64D3                   MOV         R13,R4
      Sound4Calc    42            PrintMini(1, 1, (const unsigned char*)buffer, 0);
    00000252 E700                   MOV         #0,R7
    00000254 6AD3                   MOV         R13,R10
    00000256 66D3                   MOV         R13,R6
    00000258 E501                   MOV         #1,R5
    0000025A 4B0B                   JSR         @R11
    0000025C 6453                   MOV         R5,R4
      Sound4Calc    43    
      Sound4Calc    44            sprintf(buffer ,"MPU : %d",is_SH4);
    0000025E D321                   MOV.L       L475+18,R3 ; _is_SH4
    00000260 D121                   MOV.L       L475+22,R1 ; L411
    00000262 6230                   MOV.B       @R3,R2
    00000264 2F26                   MOV.L       R2,@-R15
    00000266 2F16                   MOV.L       R1,@-R15
    00000268 4C0B                   JSR         @R12
    0000026A 64A3                   MOV         R10,R4
    0000026C 7F10                   ADD         #16,R15
      Sound4Calc    45            PrintMini(1, 10, (const unsigned char*)buffer, 0);
    0000026E E700                   MOV         #0,R7
    00000270 66A3                   MOV         R10,R6
    00000272 E50A                   MOV         #10,R5
    00000274 4B0B                   JSR         @R11
    00000276 E401                   MOV         #1,R4
      Sound4Calc    46    
      Sound4Calc    47            GetKey(&key);
    00000278 BFA8                   BSR         _GetKeyMod
    0000027A 64F3                   MOV         R15,R4
      Sound4Calc    48    
      Sound4Calc    49            switch(key)
    0000027C 60F2                   MOV.L       @R15,R0
    0000027E 881B                   CMP/EQ      #27,R0
    00000280 8907                   BT          L433
    00000282 8826                   CMP/EQ      #38,R0
    00000284 8907                   BT          L434
    00000286 881F                   CMP/EQ      #31,R0
    00000288 8911                   BT          L457
    0000028A 882F                   CMP/EQ      #47,R0
    0000028C 8916                   BT          L430
    0000028E AFD9                   BRA         L455
    00000290 0009                   NOP
    00000292              L433:                            ; case label 
      Sound4Calc    50            {
      Sound4Calc    51                case KEY_CTRL_RIGHT : sleep+=10; break;
    00000292 AFD7                   BRA         L455




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000294 7E0A                   ADD         #10,R14
    00000296              L434:                            ; case label 
      Sound4Calc    52                case KEY_CTRL_LEFT : sleep-=10; break;
    00000296 AFD5                   BRA         L455
    00000298 7EF6                   ADD         #-10,R14
    0000029A              L458:                             
      Sound4Calc    53                case KEY_CTRL_EXE :
      Sound4Calc    54                while(IsKeyDown(KEY_CTRL_EXE))
      Sound4Calc    55                {
      Sound4Calc    56                    Pin();
    0000029A B073                   BSR         _Pin
    0000029C 0009                   NOP
      Sound4Calc    57                    for(i=0;i<sleep;i++);
    0000029E 4E15                   CMP/PL      R14
    000002A0 8F03                   BF/S        L459
    000002A2 6493                   MOV         R9,R4
    000002A4              L460:                             
    000002A4 7401                   ADD         #1,R4
    000002A6 34E3                   CMP/GE      R14,R4
    000002A8 8BFC                   BF          L460
    000002AA              L459:                             
      Sound4Calc    58                    Pin();
    000002AA B06B                   BSR         _Pin
    000002AC 0009                   NOP
    000002AE              L457:                             
    000002AE BF45                   BSR         _KeyDown
    000002B0 E41F                   MOV         #31,R4
    000002B2 600C                   EXTU.B      R0,R0
    000002B4 2008                   TST         R0,R0
    000002B6 8BF0                   BF          L458
      Sound4Calc    59                }
      Sound4Calc    60                break;
    000002B8 AFC4                   BRA         L455
    000002BA 0009                   NOP
    000002BC              L430:
      Sound4Calc    61                case KEY_CTRL_EXIT :
      Sound4Calc    62                return 1;
      Sound4Calc    63            } 
      Sound4Calc    64        }
      Sound4Calc    65    return 1; // this point is never reached
    000002BC E001                   MOV         #1,R0
      Sound4Calc    66    }
    000002BE 7F38                   ADD         #56,R15
    000002C0 4F26                   LDS.L       @R15+,PR
    000002C2 68F6                   MOV.L       @R15+,R8
    000002C4 69F6                   MOV.L       @R15+,R9
    000002C6 6AF6                   MOV.L       @R15+,R10
    000002C8 6BF6                   MOV.L       @R15+,R11
    000002CA 6CF6                   MOV.L       @R15+,R12
    000002CC 6DF6                   MOV.L       @R15+,R13
    000002CE 000B                   RTS
    000002D0 6EF6                   MOV.L       @R15+,R14
    000002D2              L475:                             
    000002D2 07D0                   .DATA.W     H'07D0
    000002D4 <00000000>             .DATA.L     L410
    000002D8 <00000000>             .DATA.L     _PrintMini
    000002DC <00000000>             .DATA.L     _sprintf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E0 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000002E4 <00000000>             .DATA.L     _is_SH4
    000002E8 <00000000>             .DATA.L     L411
      Sound4Calc    67    
      Sound4Calc    68    void setup()
    000002EC              _setup:                          ; function: setup
                                                           ; frame size=4
    000002EC 4F22                   STS.L       PR,@-R15
      Sound4Calc    69    {
      Sound4Calc    70        is_SH4 = getMPU();
    000002EE B056                   BSR         _getMPU
    000002F0 0009                   NOP
    000002F2 D236                   MOV.L       L476+10,R2 ; _is_SH4
      Sound4Calc    71    
      Sound4Calc    72        if(is_SH4)
    000002F4 D636                   MOV.L       L476+14,R6 ; H'A4410008
    000002F6 2200                   MOV.B       R0,@R2
    000002F8 D536                   MOV.L       L476+18,R5 ; H'0000FFCF
    000002FA 600E                   EXTS.B      R0,R0
    000002FC 2008                   TST         R0,R0
    000002FE 8924                   BT          L462
      Sound4Calc    73        {
      Sound4Calc    74        // inital value : xxxx 01xx
      Sound4Calc    75            *(unsigned char*)SH7305_PJDR |= 0x04;
    00000300 D435                   MOV.L       L476+22,R4 ; H'A4050130
    00000302 6040                   MOV.B       @R4,R0
      Sound4Calc    76            *(unsigned char*)SH7305_PJDR &= ~0x08;
      Sound4Calc    77        // final value :  xxxx 10xx
      Sound4Calc    78        // now, we can do 'xor' to make sound
      Sound4Calc    79    
      Sound4Calc    80        // SCIF2 clock on (MSTPCR0.MSTP007) 
      Sound4Calc    81            *(unsigned int*)SH7305_MSTPCR0 &= ~0x00000080;
    00000304 935D                   MOV.W       L476,R3    ; H'FF7F
    00000306 CB04                   OR          #4,R0
    00000308 2400                   MOV.B       R0,@R4
    0000030A 6040                   MOV.B       @R4,R0
    0000030C C9F7                   AND         #247,R0
    0000030E 2400                   MOV.B       R0,@R4
    00000310 D432                   MOV.L       L476+26,R4 ; H'A4150030
    00000312 6142                   MOV.L       @R4,R1
    00000314 2139                   AND         R3,R1
    00000316 2412                   MOV.L       R1,@R4
      Sound4Calc    82        // switch off SCSMR_2.TE and SCSMR_2.RE 
      Sound4Calc    83            *(unsigned short*)SH7305_SCSCR &= ~0x0030;
    00000318 6061                   MOV.W       @R6,R0
    0000031A 2059                   AND         R5,R0
    0000031C 2601                   MOV.W       R0,@R6
      Sound4Calc    84        // SCIF2 clock off (MSTPCR0.MSTP007)
      Sound4Calc    85            *(unsigned int*)SH7305_MSTPCR0 |= 0x00000080;
    0000031E 6042                   MOV.L       @R4,R0
      Sound4Calc    86    
      Sound4Calc    87        // set bit 3 of port U to output mode
      Sound4Calc    88            *(unsigned short*)SH7305_PUCR = ( *(unsigned short*)SH7305_PUCR & ~0x00C0 ) | 0x0040;
    00000320 D62F                   MOV.L       L476+30,R6 ; H'0000FF3F
    00000322 CB80                   OR          #128,R0
      Sound4Calc    89        // set bit 4 and 5 of port U
      Sound4Calc    90            *(unsigned char*)SH7305_PUDR |= 0x0C;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000324 D130                   MOV.L       L476+38,R1 ; H'A4050162
    00000326 2402                   MOV.L       R0,@R4
    00000328 D42E                   MOV.L       L476+34,R4 ; H'A4050142
    0000032A 6041                   MOV.W       @R4,R0
    0000032C 2069                   AND         R6,R0
    0000032E CB40                   OR          #64,R0
    00000330 2401                   MOV.W       R0,@R4
      Sound4Calc    91    
      Sound4Calc    92        // set port J bit 2 to output mode  
      Sound4Calc    93            *(unsigned short*)SH7305_PJCR = ( *(unsigned short*)SH7305_PJCR & ~0x0030 ) | 0x0010;
    00000332 74CE                   ADD         #-50,R4
    00000334 6010                   MOV.B       @R1,R0
    00000336 CB0C                   OR          #12,R0
    00000338 2100                   MOV.B       R0,@R1
    0000033A 6041                   MOV.W       @R4,R0
    0000033C 2059                   AND         R5,R0
    0000033E CB10                   OR          #16,R0
    00000340 2401                   MOV.W       R0,@R4
      Sound4Calc    94        // set port J bit 3 to output mode
      Sound4Calc    95            *(unsigned short*)SH7305_PJCR = ( *(unsigned short*)SH7305_PJCR & ~0x00C0 ) | 0x0040;
    00000342 6041                   MOV.W       @R4,R0
    00000344 2069                   AND         R6,R0
    00000346 A01A                   BRA         L471
    00000348 CB40                   OR          #64,R0
    0000034A              L462:                             
      Sound4Calc    96        }
      Sound4Calc    97        else
      Sound4Calc    98        {
      Sound4Calc    99        // SCIF2 clock on (STBCR3.MSTP31)
      Sound4Calc   100            *(unsigned char*)SH7337_STBCR3 &= ~0x02;
    0000034A D428                   MOV.L       L476+42,R4 ; H'A40A0000
      Sound4Calc   101        // switch off SCSMR_2.TE and SCSMR_2.RE 
      Sound4Calc   102            *(unsigned short*)SH7337_SCSCR2 &= ~0x0030;
      Sound4Calc   103        // SCIF2 clock off (STBCR3.MSTP31)
      Sound4Calc   104            *(unsigned char*)SH7337_STBCR3 |= 0x02;
      Sound4Calc   105        // set bit 6 of port G to output mode
      Sound4Calc   106            *(unsigned short*)SH7337_PGCR = ( *(unsigned short*)SH7337_PGCR & ~0x3000 ) | 0x1000;
      Sound4Calc   107        // set bit 5 and 6 of port G
      Sound4Calc   108            *(unsigned char*)SH7337_PGDR |= 0x60;
    0000034C D22A                   MOV.L       L476+54,R2 ; H'A400012C
    0000034E 6040                   MOV.B       @R4,R0
    00000350 C9FD                   AND         #253,R0
    00000352 2400                   MOV.B       R0,@R4
    00000354 6361                   MOV.W       @R6,R3
    00000356 2359                   AND         R5,R3
    00000358 2631                   MOV.W       R3,@R6
    0000035A 6040                   MOV.B       @R4,R0
    0000035C D325                   MOV.L       L476+50,R3 ; H'0000CFFF
    0000035E CB02                   OR          #2,R0
    00000360 2400                   MOV.B       R0,@R4
    00000362 D423                   MOV.L       L476+46,R4 ; H'A400010C
    00000364 902E                   MOV.W       L476+2,R0  ; H'1000
    00000366 6141                   MOV.W       @R4,R1
    00000368 2139                   AND         R3,R1
    0000036A 210B                   OR          R0,R1
    0000036C 2411                   MOV.W       R1,@R4
      Sound4Calc   109        // set port SC bit 0 to output  




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Sound4Calc   110            *(unsigned short*)SH7337_SCPCR = ( *(unsigned short*)SH7337_SCPCR & ~0x0003 ) | 0x0001;
    0000036E 740A                   ADD         #10,R4
    00000370 6020                   MOV.B       @R2,R0
    00000372 CB60                   OR          #96,R0
    00000374 2200                   MOV.B       R0,@R2
    00000376 D221                   MOV.L       L476+58,R2 ; H'0000FFFC
    00000378 6041                   MOV.W       @R4,R0
    0000037A 2029                   AND         R2,R0
    0000037C CB01                   OR          #1,R0
    0000037E              L471:                             
      Sound4Calc   111        }
      Sound4Calc   112        /*
      Sound4Calc   113        // set port J bit 2 to output   
      Sound4Calc   114        *(unsigned short*)0xA4050110 = ( *(unsigned short*)0xA4050110 & ~0x0030 ) | 0x0010;
      Sound4Calc   115        // set port J bit 3 to input    
      Sound4Calc   116        *(unsigned short*)0xA4050110 = ( *(unsigned short*)0xA4050110 & ~0x00C0 ) | 0x0080;*/
      Sound4Calc   117    }
    0000037E 4F26                   LDS.L       @R15+,PR
    00000380 000B                   RTS
    00000382 2401                   MOV.W       R0,@R4
      Sound4Calc   118    
      Sound4Calc   119    void Pin(void)
    00000384              _Pin:                            ; function: Pin
                                                           ; frame size=0
      Sound4Calc   120    {
      Sound4Calc   121        if(is_SH4)
    00000384 D211                   MOV.L       L476+10,R2 ; _is_SH4
    00000386 6320                   MOV.B       @R2,R3
    00000388 2338                   TST         R3,R3
    0000038A 8903                   BT          L464
      Sound4Calc   122        {
      Sound4Calc   123            *(unsigned char*)SH7305_PJDR ^= 0x0C;
    0000038C D312                   MOV.L       L476+22,R3 ; H'A4050130
    0000038E 6030                   MOV.B       @R3,R0
    00000390 A003                   BRA         L472
    00000392 CA0C                   XOR         #12,R0
    00000394              L464:                             
      Sound4Calc   124            //set pin to 0x4B or reset it to 0x47
      Sound4Calc   125        }
      Sound4Calc   126        else 
      Sound4Calc   127        {
      Sound4Calc   128            *(unsigned char*)SH7337_SCPDR ^= 0x01;
    00000394 D31A                   MOV.L       L476+62,R3 ; H'A4000136
    00000396 6030                   MOV.B       @R3,R0
    00000398 CA01                   XOR         #1,R0
    0000039A              L472:                             
      Sound4Calc   129        }
      Sound4Calc   130    }
    0000039A 000B                   RTS
    0000039C 2300                   MOV.B       R0,@R3
      Sound4Calc   131    
      Sound4Calc   132    
      Sound4Calc   133    char getMPU(void)
    0000039E              _getMPU:                         ; function: getMPU
                                                           ; frame size=0
      Sound4Calc   134    {
      Sound4Calc   135        // Port L control register.




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Sound4Calc   136        volatile unsigned short *plcr = (unsigned short *)0xa4000114;
      Sound4Calc   137        // Saved value for PLCR.
      Sound4Calc   138        unsigned short saved_plcr;
      Sound4Calc   139        unsigned int tested_plcr;
      Sound4Calc   140    
      Sound4Calc   141        saved_plcr = *plcr;
    0000039E D419                   MOV.L       L476+66,R4 ; H'A4000114
    000003A0 6641                   MOV.W       @R4,R6
      Sound4Calc   142        *plcr = 0xffff;
    000003A2 D319                   MOV.L       L476+70,R3 ; H'0000FFFF
    000003A4 2431                   MOV.W       R3,@R4
      Sound4Calc   143    
      Sound4Calc   144        tested_plcr = *plcr;
    000003A6 6541                   MOV.W       @R4,R5
    000003A8 655D                   EXTU.W      R5,R5
      Sound4Calc   145        *plcr = saved_plcr;
      Sound4Calc   146    
      Sound4Calc   147        if(tested_plcr == 0x00ff || tested_plcr == 0x0fff)
    000003AA 920C                   MOV.W       L476+4,R2  ; H'00FF
    000003AC 3520                   CMP/EQ      R2,R5
    000003AE 8D03                   BT/S        L467
    000003B0 2461                   MOV.W       R6,@R4
    000003B2 9109                   MOV.W       L476+6,R1  ; H'0FFF
    000003B4 3510                   CMP/EQ      R1,R5
    000003B6 8B01                   BF          L466
    000003B8              L467:                             
      Sound4Calc   148        {
      Sound4Calc   149            return 0; // MPU_SH3
    000003B8 000B                   RTS
    000003BA E000                   MOV         #0,R0
    000003BC              L466:                             
      Sound4Calc   150        }
      Sound4Calc   151    
      Sound4Calc   152        return 1; // MPU_SH4
    000003BC E001                   MOV         #1,R0
      Sound4Calc   153    }
    000003BE              L468:                             
    000003BE 000B                   RTS
    000003C0 0009                   NOP
    000003C2              L476:                             
    000003C2 FF7F                   .DATA.W     H'FF7F
    000003C4 1000                   .DATA.W     H'1000
    000003C6 00FF                   .DATA.W     H'00FF
    000003C8 0FFF                   .DATA.W     H'0FFF
    000003CA 0000                   .DATA.W     0
    000003CC <00000000>             .DATA.L     _is_SH4
    000003D0 A4410008               .DATA.L     H'A4410008
    000003D4 0000FFCF               .DATA.L     H'0000FFCF
    000003D8 A4050130               .DATA.L     H'A4050130
    000003DC A4150030               .DATA.L     H'A4150030
    000003E0 0000FF3F               .DATA.L     H'0000FF3F
    000003E4 A4050142               .DATA.L     H'A4050142
    000003E8 A4050162               .DATA.L     H'A4050162
    000003EC A40A0000               .DATA.L     H'A40A0000
    000003F0 A400010C               .DATA.L     H'A400010C
    000003F4 0000CFFF               .DATA.L     H'0000CFFF
    000003F8 A400012C               .DATA.L     H'A400012C




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003FC 0000FFFC               .DATA.L     H'0000FFFC
    00000400 A4000136               .DATA.L     H'A4000136
    00000404 A4000114               .DATA.L     H'A4000114
    00000408 0000FFFF               .DATA.L     H'0000FFFF
      Sound4Calc   154    
      Sound4Calc   155    //****************************************************************************
      Sound4Calc   156    //**************                                              ****************
      Sound4Calc   157    //**************                 Notice!                      ****************
      Sound4Calc   158    //**************                                              ****************
      Sound4Calc   159    //**************  Please do not change the following source.  ****************
      Sound4Calc   160    //**************                                              ****************
      Sound4Calc   161    //****************************************************************************
      Sound4Calc   162    
      Sound4Calc   163    
      Sound4Calc   164    #pragma section _BR_Size
      Sound4Calc   165    unsigned long BR_Size;
      Sound4Calc   166    #pragma section
      Sound4Calc   167    
      Sound4Calc   168    
      Sound4Calc   169    #pragma section _TOP
      Sound4Calc   170    
      Sound4Calc   171    //****************************************************************************
      Sound4Calc   172    //  InitializeSystem
      Sound4Calc   173    //
      Sound4Calc   174    //  param   :   isAppli   : 1 = Application / 0 = eActivity
      Sound4Calc   175    //              OptionNum : Option Number (only eActivity)
      Sound4Calc   176    //
      Sound4Calc   177    //  retval  :   1 = No error / 0 = Error
      Sound4Calc   178    //
      Sound4Calc   179    //****************************************************************************
      Sound4Calc   180    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      Sound4Calc   181    {
      Sound4Calc   182        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L477+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L477:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      Sound4Calc   183    }
      Sound4Calc   184    
      Sound4Calc   185    #pragma section
C   00000000              _sc0015:                         ; static: sc0015
    00000000 D201D00242             .DATA.L     H'D201D002,H'422B0009,H'80010070,H'00000015
             2B00098001   
             0070000000   
             15           
    00000010              L410:
    00000010 2D20256420             .SDATA      "- %d +"
             2B           
    00000016 00                     .DATA.B     H'00
    00000017 00000001               .RES.B      1
    00000018              L411:
    00000018 4D5055203A             .SDATA      "MPU : %d"
             202564       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000020 00                     .DATA.B     H'00
B   00000000              _is_SH4:                         ; static: is_SH4
    00000000 00000001               .RES.B      1
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1
























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Dec-2015 21:42:32  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        53




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      185



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000040C Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000021 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000001 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000043E Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          13
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            53






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\mosnier\AppData\Local\Temp\hmk46D3.tmp 

